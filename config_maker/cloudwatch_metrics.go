package main

var cloudwatchMetrics = map[string]map[string]CloudWatchMetric{
	"ElastiCache": map[string]CloudWatchMetric{
		"CPUUtilization": CloudWatchMetric{
			Name:      "CPUUtilization",
			Period:    "3600",
			Unit:      "Percent",
			Namespace: "AWS/ElastiCache",
			Id:        "test1",
			Stat:      "Average",
		},
	},
	"DynamoDB": map[string]CloudWatchMetric{
		"ConsumedReadCapacityUnits": CloudWatchMetric{
			Name:      "ConsumedReadCapacityUnits",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/DynamoDB",
			Id:        "test1",
			Stat:      "Sum",
		},
		"ConsumedWriteCapacityUnits": CloudWatchMetric{
			Name:      "ConsumedWriteCapacityUnits",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/DynamoDB",
			Id:        "test1",
			Stat:      "Sum",
		},
		"ProvisionedWriteCapacityUnits": CloudWatchMetric{
			Name:      "ProvisionedWriteCapacityUnits",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/DynamoDB",
			Id:        "test1",
			Stat:      "Sum",
		},
		"ReturnedItemCount": CloudWatchMetric{
			Name:      "ReturnedItemCount",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/DynamoDB",
			Id:        "test1",
			Stat:      "Sum",
		},
		"ProvisionedReadCapacityUnits": CloudWatchMetric{
			Name:      "ProvisionedReadCapacityUnits",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/DynamoDB",
			Id:        "test1",
			Stat:      "Sum",
		},
		"SuccessfulRequestLatency": CloudWatchMetric{
			Name:      "SuccessfulRequestLatency",
			Period:    "3600",
			Unit:      "Milliseconds",
			Namespace: "AWS/DynamoDB",
			Id:        "test1",
			Stat:      "Average",
		},
	},
	"Efs": map[string]CloudWatchMetric{
		"DataReadIOBytes": CloudWatchMetric{
			Name:      "DataReadIOBytes",
			Period:    "3600",
			Unit:      "Bytes",
			Namespace: "AWS/EFS",
			Id:        "test1",
			Stat:      "Average",
		},
		"DataWriteIOBytes": CloudWatchMetric{
			Name:      "DataWriteIOBytes",
			Period:    "3600",
			Unit:      "Bytes",
			Namespace: "AWS/EFS",
			Id:        "test1",
			Stat:      "Average",
		},
	},
	"NatGateway": map[string]CloudWatchMetric{
		"ConnectionEstablishedCount": CloudWatchMetric{
			Name:      "ConnectionEstablishedCount",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/NATGateway",
			Id:        "test1",
			Stat:      "Sum",
		},
		"ActiveConnectionCount": CloudWatchMetric{
			Name:      "ActiveConnectionCount",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/NATGateway",
			Id:        "test1",
			Stat:      "Sum",
		},
		"BytesInFromDestination": CloudWatchMetric{
			Name:      "BytesInFromDestination",
			Period:    "3600",
			Unit:      "Bytes",
			Namespace: "AWS/NATGateway",
			Id:        "test1",
			Stat:      "Average",
		},
		"BytesInFromSource": CloudWatchMetric{
			Name:      "BytesInFromSource",
			Period:    "3600",
			Unit:      "Bytes",
			Namespace: "AWS/NATGateway",
			Id:        "test1",
			Stat:      "Average",
		},
		"BytesOutToDestination": CloudWatchMetric{
			Name:      "BytesOutToDestination",
			Period:    "3600",
			Unit:      "Bytes",
			Namespace: "AWS/NATGateway",
			Id:        "test1",
			Stat:      "Average",
		},

		"BytesOutToSource": CloudWatchMetric{
			Name:      "BytesOutToSource",
			Period:    "3600",
			Unit:      "Bytes",
			Namespace: "AWS/NATGateway",
			Id:        "test1",
			Stat:      "Average",
		},
	},
	"ELB": map[string]CloudWatchMetric{
		"EstimatedProcessedBytes": CloudWatchMetric{
			Name:      "EstimatedProcessedBytes",
			Period:    "3600",
			Unit:      "Bytes",
			Namespace: "AWS/ELB",
			Id:        "test1",
			Stat:      "Average",
		},
		"RequestCount": CloudWatchMetric{
			Name:      "RequestCount",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/ELB",
			Id:        "test1",
			Stat:      "Sum",
		},
	},
	"S3": map[string]CloudWatchMetric{
		"ListRequests": CloudWatchMetric{
			Name:      "ListRequests",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/S3",
			Id:        "test1",
			Stat:      "Sum",
		},
		"SelectRequests": CloudWatchMetric{
			Name:      "SelectRequests",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/S3",
			Id:        "test1",
			Stat:      "Sum",
		},
		"HeadRequests": CloudWatchMetric{
			Name:      "HeadRequests",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/S3",
			Id:        "test1",
			Stat:      "Sum",
		},
		"DeleteRequests": CloudWatchMetric{
			Name:      "DeleteRequests",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/S3",
			Id:        "test1",
			Stat:      "Sum",
		},
		"PutRequests": CloudWatchMetric{
			Name:      "PutRequests",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/S3",
			Id:        "test1",
			Stat:      "Sum",
		},
		"GetRequests": CloudWatchMetric{
			Name:      "GetRequests",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/S3",
			Id:        "test1",
			Stat:      "Sum",
		},
		"AllRequests": CloudWatchMetric{
			Name:      "AllRequests",
			Period:    "3600",
			Unit:      "Count",
			Namespace: "AWS/S3",
			Id:        "test1",
			Stat:      "Sum",
		},
		"NumberOfObjects": CloudWatchMetric{
			Name:      "NumberOfObjects",
			Period:    "86400",
			Unit:      "Count",
			Namespace: "AWS/S3",
			Id:        "test1",
			Stat:      "Sum",
		},
		"BucketSizeBytes": CloudWatchMetric{
			Name:      "BucketSizeBytes",
			Period:    "86400",
			Unit:      "Bytes",
			Namespace: "AWS/S3",
			Id:        "test1",
			Stat:      "Average",
		},
	},
	"EC2": map[string]CloudWatchMetric{
		"NetworkOut": CloudWatchMetric{
			Name:      "NetworkOut",
			Period:    "3600",
			Unit:      "Bytes",
			Namespace: "AWS/EC2",
			Id:        "test1",
			Stat:      "Average",
		},
		"NetworkIn": CloudWatchMetric{
			Name:      "NetworkIn",
			Period:    "3600",
			Unit:      "Bytes",
			Namespace: "AWS/EC2",
			Id:        "test1",
			Stat:      "Average",
		},
	},
	"Cloudfront": map[string]CloudWatchMetric{
		"TotalErrorRate": CloudWatchMetric{
			Name:      "TotalErrorRate",
			Period:    "3600",
			Unit:      "None",
			Namespace: "AWS/CloudFront",
			Id:        "test1",
			Stat:      "Average",
		},
		"Requests": CloudWatchMetric{
			Name:      "Requests",
			Period:    "3600",
			Unit:      "None",
			Namespace: "AWS/CloudFront",
			Id:        "test1",
			Stat:      "Average",
		},
		"BytesDownloaded": CloudWatchMetric{
			Name:      "BytesDownloaded",
			Period:    "3600",
			Unit:      "None",
			Namespace: "AWS/CloudFront",
			Id:        "test1",
			Stat:      "Average",
		},
	},
}

package main

var metric_templates = map[string]MetricTemplate{
	"BytesDownloaded": MetricTemplate{Metrictype: "CloudWatchMetrics", ServiceName: "Cloudfront", Template: CloudwatchMetricTemplate{
		Metricname: "BytesDownloaded",
		Period:     "3600",
		Unit:       "None",
		Namespace:  "AWS/CloudFront",
		Id:         "test1",
		Stat:       "Average",
	},
	},
	"Requests": MetricTemplate{Metrictype: "CloudWatchMetrics", ServiceName: "Cloudfront", Template: CloudwatchMetricTemplate{
		Metricname: "Requests",
		Period:     "3600",
		Unit:       "None",
		Namespace:  "AWS/CloudFront",
		Id:         "test1",
		Stat:       "Average",
	},
	},
	"TotalErrorRate": MetricTemplate{Metrictype: "CloudWatchMetrics", ServiceName: "Cloudfront", Template: CloudwatchMetricTemplate{
		Metricname: "TotalErrorRate",
		Period:     "3600",
		Unit:       "None",
		Namespace:  "AWS/CloudFront",
		Id:         "test1",
		Stat:       "Average",
	},
	},
	"BucketSizeBytes": MetricTemplate{Metrictype: "CloudWatchMetrics", ServiceName: "S3", Template: CloudwatchMetricTemplate{
		Metricname: "BucketSizeBytes",
		Period:     "3600",
		Unit:       "Bytes",
		Namespace:  "AWS/S3",
		Id:         "test1",
		Stat:       "Average",
	},
	},
	"NumberOfObjects": MetricTemplate{Metrictype: "CloudWatchMetrics", ServiceName: "S3", Template: CloudwatchMetricTemplate{
		Metricname: "NumberOfObjects",
		Period:     "3600",
		Unit:       "Bytes",
		Namespace:  "AWS/S3",
		Id:         "test1",
		Stat:       "Average",
	},
	},
	"RequestCount": MetricTemplate{Metrictype: "CloudWatchMetrics", ServiceName: "ELB", Template: CloudwatchMetricTemplate{
		Metricname: "RequestCount",
		Period:     "3600",
		Unit:       "Count",
		Namespace:  "AWS/ELB",
		Id:         "test1",
		Stat:       "Sum",
	},
	},
	"EstimatedProcessedBytes": MetricTemplate{Metrictype: "CloudWatchMetrics", ServiceName: "ELB", Template: CloudwatchMetricTemplate{
		Metricname: "EstimatedProcessedBytes",
		Period:     "3600",
		Unit:       "Bytes",
		Namespace:  "AWS/ELB",
		Id:         "test1",
		Stat:       "Average",
	},
	},
	"CoreCount": MetricTemplate{Metrictype: "CustomMetrics", ServiceName: "EC2", Template: CustomMetricTemplate{
		Metricname: "CoreCount",
	},
	},
	"VCpuCount": MetricTemplate{Metrictype: "CustomMetrics", ServiceName: "EC2", Template: CustomMetricTemplate{
		Metricname: "VCpuCount",
	},
	},
	"Size": MetricTemplate{Metrictype: "CustomMetrics", ServiceName: "EBS", Template: CustomMetricTemplate{
		Metricname: "Size",
	},
	},
}
